#version 430

layout( local_size_x = 10, local_size_y = 10 ) in;

layout( binding = 0, rgba8) uniform image2D ColorImg;

uniform int width = 800;
uniform int height = 600;

struct Ray{
	vec3 Origin;
	vec3 Direction;
};

//uniform Ray r;

vec3 Color(Ray r) {
    vec3 unit_direction = r.Direction;
    float t = 0.5f * (unit_direction.y + 1.0f);
    return (1.0f - t) * vec3(1.0f, 1.0f, 1.0f) + t * vec3(0.5f,0.7f,1.0f);
}

void main() {
	vec3 lower_left_corner = vec3(-2.0f,-1.0f,-1.0f);
    vec3 horizontal = vec3(4.0f,0.0f,0.0f);
    vec3 origin = vec3(0.0f,0.0f,0.0f);
    vec3 vertical = vec3(0.0f,2.0f,0.0f);

	float i = gl_GlobalInvocationID.x;
	float j = height - gl_GlobalInvocationID.y;
	float u = i / width;
    float v = j / height;
	vec3 color = Color(Ray(origin,lower_left_corner+ u *horizontal+v*vertical));
	imageStore(ColorImg,ivec2(gl_GlobalInvocationID.xy), vec4(color,1));
}
